- name: backend
  hosts: backend
  become: yes
  tasks:
  - name:  disable
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: insall node js
    ansible.builtin.dnf: #onlyworks for redhat family
      name: nodejs
      state: installed
  - name: add user expense
    ansible.builtin.user:
      name: expense
  - name: create directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: download backendcode
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  - name: unzip
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: copy
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
  - name: install mysql
    ansible.builtin.dnf:
      name: mysql
      state: installed
  - name: install python mysql dep
    ansible.builtin.pip:
      name: 
      - PyMySQL
      - cryptography
      executable: pip3.9

  - name: login mysql
    community.mysql.mysql_db:
      login_user: root
      login_password: ExpenseApp@1
      login_host: db.phonestand.in
      target: /app/schema/backend.sql
      state: import
      name: all
    - name: daemon reload
      ansible.builtin.systemd_service:
        daemon_reload: true
    - name: start and enable backend
      ansible.builtin.service:
        name: backend
        state: started
        enabled: yes